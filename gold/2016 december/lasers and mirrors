#include <bits/stdc++.h>

using namespace std;
#define ll long long

const ll os=1000000000;
ll n, xl, yl, xb, yb;
map<ll,vector<ll>>adj;
map<ll,ll>dist;
map<ll,bool>visit;
priority_queue<pair<int,int>>pq;

int main()
{
    ifstream cin("lasers.in");
    ofstream cout("lasers.out");
    cin>>n;
    cin>>xl>>yl>>xb>>yb;
    dist[xb]=dist[yb]=INT_MAX;
    yl+=os; yb+=os;
    for(int i=0;i<n;i++){
        ll x, y; cin>>x>>y;
        y+=os; adj[x].push_back(y); adj[y].push_back(x);
        dist[x]=INT_MAX; dist[y]=INT_MAX;
    }
    /*for(auto it=adj.begin(); it!=adj.end();it++){
        cout<<(*it).first<<":"<<"\n";
        for(int i=0;i<(*it).second.size();i++){
            cout<<(*it).second[i]<<" ";
        }
        cout<<"\n";
    }*/
    dist[yl]=0; dist[xl]=0;
    pq.push(make_pair(0,yl));
    pq.push(make_pair(0,xl));
    while(!pq.empty()){
        ll a=pq.top().second; pq.pop();
        if(visit[a]) continue;
        visit[a]=true;
        for(int i=0;i<adj[a].size();i++){
            ll b=adj[a][i];
            if(dist[a]+1<dist[b]){
                dist[b]=dist[a]+1;
                pq.push(make_pair(-dist[b],b));
            }
        }

    }
    ll ans=min(dist[xb],dist[yb]);
    /*for(auto it=dist.begin();it!=dist.end();it++){
        cout<< (*it).first<<" "<<dist[(*it).first]<<"\n";
    }
    cout<<dist[xb]<<" "<<dist[yb]<<"\n";*/
    cout<<ans;
    return 0;
}
