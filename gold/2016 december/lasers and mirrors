#include <bits/stdc++.h>

using namespace std;

int n, xl, yl, xb, yb;
const int os=1000000000;
map<int,vector<int>>adj;
map<int,bool>visit;
map<int,int>dist;

int main()
{
    ifstream cin("lasers.in");
    ofstream cout("lasers.out");
    cin>>n>>xl>>yl>>xb>>yb;
    yl+=os; yb+=os;
    for(int i=0;i<n;i++){
        int t1, t2; cin>>t1>>t2;
        t2+=os;
        dist[t1]=INT_MAX;
        dist[t2]=INT_MAX;
        adj[t1].push_back(t2);
        adj[t2].push_back(t1);
    }
    priority_queue<pair<int,int>>pq;
    pq.push(make_pair(0,xl));
    pq.push(make_pair(0,yl));
    dist[xl]=0; dist[yl]=0;
    while(!pq.empty()){
        pair<int,int> cur=pq.top();
        pq.pop();
        if(cur.second==xb || cur.second==yb){
            cout<<-cur.first;
            return 0;
        }
        for(int i=0;i<adj[cur.second].size();i++){
            if(dist[cur.second]+1<dist[adj[cur.second][i]]){
                dist[adj[cur.second][i]]=dist[cur.second]+1;
                pq.push(make_pair(-dist[adj[cur.second][i]],adj[cur.second][i]));
            }
        }
    }
    cout<<min(dist[xb],dist[yb]);
    return 0;
}
