#include <bits/stdc++.h>

using namespace std;

int n, k;
map<char,int>hsh;
vector<int>v;
int pref[100001][3];
int dp[100001][21][4];

int main()
{
    ifstream cin("hps.in");
    ofstream cout("hps.out");
    cin>>n>>k;
    hsh['H']=0;
    hsh['P']=1;
    hsh['S']=2;
    for(int i=0;i<n;i++){
        char c; cin>>c;
        v.push_back(hsh[c]);
    }
    for(int i=0;i<=n;i++){
        for(int j=0;j<=k;j++){
            for(int x=0;x<3;x++){
                if(i==0) dp[i][j][x]=0;
                else{
                if(j==0){
                    dp[i][j][x]=(v[i-1]==x)+dp[i-1][j][x];
                }
                else dp[i][j][x]=max(max(dp[i-1][j-1][(x+1)%3],dp[i-1][j-1][(x+2)%3]),dp[i-1][j][x])+(v[i-1]==x);}
            }
        }
    }
    cout<<max(max(dp[n][k][0],dp[n][k][1]),dp[n][k][2]);
    return 0;
}
