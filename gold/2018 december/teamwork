#include <bits/stdc++.h>

using namespace std;

int n, k;
vector<int>v;
int dp[10001];

int main()
{
    ifstream cin("teamwork.in");
    ofstream cout("teamwork.out");
    cin>>n>>k;
    for(int i=0;i<n;i++){
        int t; cin>>t; v.push_back(t);
    }

    int sparse[n][25];
    int log[n+1];
    log[1]=0;
    for(int i=2;i<=n;i++){
        log[i]=log[i/2]+1;
    }
    for(int i=0;i<n;i++){
        sparse[i][0]=v[i];
    }
    for(int j=1;j<=25;j++){
        for(int i=0;i+(1 << j)<=n;i++){
            sparse[i][j]=max(sparse[i][j-1],sparse[i+(1 << (j-1))][j-1]);
        }
    }


    for(int i=0;i<n;i++){
        for(int x=1;x<=k;x++){
            if(i-x+1<0) continue;
            int l=i-x+1; int r=i;
            int p=log[r-l+1];
            int maxi=max(sparse[l][p], sparse[r-(1 << p)+1][p]);
            dp[i]=max(dp[i],dp[i-x]+(x)*maxi);
        }
    }
    cout<<dp[n-1];
    return 0;
}
