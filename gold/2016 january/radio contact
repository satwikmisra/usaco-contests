#include <bits/stdc++.h>

using namespace std;

int n, m, fx, fy, bx, by;
string s1, s2;
vector<pair<int,int>>fj;
vector<pair<int,int>>be;
int dp[1001][1001];

int dist(int i,int j){
    return (fj[i].first-be[j].first)*(fj[i].first-be[j].first)+(fj[i].second-be[j].second)*(fj[i].second-be[j].second);
}

int main()
{
    ifstream cin("radio.in");
    ofstream cout("radio.out");
    cin>>n>>m>>fx>>fy>>bx>>by>>s1>>s2;
    for(int i=0;i<n;i++){
        fj.push_back(make_pair(fx,fy));
        if(s1[i]=='N') fy++;
        else if(s1[i]=='S') fy--;
        else if(s1[i]=='E') fx++;
        else if(s1[i]=='W') fx--;
    }
    fj.push_back(make_pair(fx,fy));
    for(int i=0;i<m;i++){
        be.push_back(make_pair(bx,by));
        if(s2[i]=='N') by++;
        else if(s2[i]=='S') by--;
        else if(s2[i]=='E') bx++;
        else if(s2[i]=='W') bx--;
    }
    be.push_back(make_pair(bx,by));
    for(int i=0;i<1001;i++){
        for(int j=0;j<1001;j++){
            dp[i][j]=0;
        }
    }
    dp[0][0]=0;
    for(int i=1;i<=n;i++){
        dp[i][0]=dp[i-1][0]+dist(i,0);
    }
    for(int j=1;j<=m;j++){
        dp[0][j]=dp[0][j-1]+dist(0,j);
    }
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            dp[i][j]+=dist(i,j);
            dp[i][j]+=min(dp[i-1][j],min(dp[i][j-1],dp[i-1][j-1]));
        }
    }
    cout<<dp[n][m];


    return 0;
}
